!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.JSExec=t():e.JSExec=t()}(this,()=>{return e={44:e=>{function t(e){console.log("=== DEBUG: JSExec function constructor called ==="),console.log("Options:",e),e=e||{};try{console.log("=== DEBUG: Setting up properties ==="),this.iframe=null,this.iframeOrigin=e.iframeOrigin||window.location.origin,this.listeners=new Set,this.isReady=!1,console.log("=== DEBUG: Properties set, about to setup message listener ==="),this.setupMessageListener(),console.log("=== DEBUG: Constructor completed successfully ===")}catch(e){throw console.error("=== DEBUG: Error in JSExec constructor ==="),console.error("Constructor error:",e),e}}console.log("js-exec script loaded!"),t.prototype.executeCode=function(e){if(this.iframe||this.createIframe(),!this.isReady)return setTimeout(()=>this.executeCode(e),100);this.iframe.contentWindow.postMessage({type:"EXECUTE_CODE",code:e},"*")},t.prototype.createIframe=function(){this.iframe=document.createElement("iframe"),this.iframe.sandbox="allow-scripts allow-forms",this.iframe.style.display="none",this.iframe.srcdoc=this.getIframeContent(),document.body.appendChild(this.iframe),this.iframe.onload=()=>{this.isReady=!0}},t.prototype.getIframeContent=function(){return`\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset="UTF-8">\n      <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'unsafe-inline' 'unsafe-eval'; connect-src 'none';">\n    </head>\n    <body>\n      <script>${this.getExecutorScript()}<\/script>\n    </body>\n    </html>\n  `},t.prototype.getExecutorScript=function(){return"\n    const MAX_EXECUTION_TIME = 5000;\n\n    const originalLog = console.log;\n    const originalError = console.error;\n    const originalWarn = console.warn;\n\n    console.log = (...args) => {\n      window.parent.postMessage({ type: 'stdout', data: args.map(arg => typeof arg === 'object' ? JSON.stringify(arg) : String(arg)).join(' ') }, '*');\n      originalLog.apply(console, args);\n    };\n\n    console.error = (...args) => {\n      window.parent.postMessage({ type: 'stderr', data: args.map(arg => typeof arg === 'object' ? JSON.stringify(arg) : String(arg)).join(' ') }, '*');\n      originalError.apply(console, args);\n    };\n\n    console.warn = (...args) => {\n      window.parent.postMessage({ type: 'stderr', data: '[WARN] ' + args.map(arg => typeof arg === 'object' ? JSON.stringify(arg) : String(arg)).join(' ') }, '*');\n      originalWarn.apply(console, args);\n    };\n\n    function executeWithTimeout(code) {\n      const timeoutId = setTimeout(() => {\n        window.parent.postMessage({ type: 'stderr', data: 'Execution timeout: Code took longer than 5000ms' }, '*');\n      }, MAX_EXECUTION_TIME);\n\n      try {\n        eval(code);\n        clearTimeout(timeoutId);\n      } catch (error) {\n        clearTimeout(timeoutId);\n        window.parent.postMessage({ type: 'stderr', data: error.message + (error.stack ? '\\n' + error.stack : '') }, '*');\n      }\n    }\n\n    window.addEventListener('message', (event) => {\n      if (event.data.type === 'EXECUTE_CODE') {\n        executeWithTimeout(event.data.code);\n      }\n    });\n  "},t.prototype.setupMessageListener=function(){window.addEventListener("message",e=>{e.source===this.iframe?.contentWindow&&this.listeners.forEach(t=>t(e.data))})},t.prototype.onMessage=function(e){return this.listeners.add(e),()=>this.listeners.delete(e)},t.prototype.destroy=function(){this.iframe&&(document.body.removeChild(this.iframe),this.iframe=null,this.isReady=!1),this.listeners.clear()},void 0!==e.exports?e.exports=t:window.JSExec=t}},t={},function o(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,o),s.exports}(44).default;var e,t});